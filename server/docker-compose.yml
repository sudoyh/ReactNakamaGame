version: '3'
services:
  postgres:
    container_name: postgres
    image: postgres:9.6-alpine
    environment:
      - POSTGRES_DB=nakama
      - POSTGRES_PASSWORD=localdb
    volumes:
      - data:/var/lib/postgresql/data
    expose:
      - "8080"
      - "5432"
    ports:
      - "5432:5432"
      - "8080:8080"
  nakama:
    container_name: nakama
    image: registry.heroiclabs.com/heroiclabs/nakama:3.12.0
    entrypoint:
      - "/bin/sh"
      - "-ecx"
      - >
        /nakama/nakama migrate up 
        --database.address postgres:localdb@postgres:5432/nakama 
        && exec /nakama/nakama --name nakama1 
        --database.address postgres:localdb@postgres:5432/nakama 
        --config /nakama/data/my-config.yml     
    restart: always
    links:
      - "postgres:db"
    depends_on:
      - postgres
    volumes:
      - ./:/nakama/data
    expose:
      - "7349"
      - "7350"
      - "7351"
    ports:
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7350/" ]
      interval: 10s
      timeout: 5s
      retries: 5
  client:
    container_name: react-client
    build:
      context: ../client
      dockerfile: Dockerfile
    volumes:
      - ../client:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - nakama
volumes:
  data:
